$color-background: #fff;
$color-accent: #191919;
$color-primary: #436372;

$color-title-header: #243f4d;
$color-title-menu: #8b8b8b;
$color-title-cards: #414141;
$color-title-design: #1a1a1a;
$color-title-footer: #1f2044;

$color-text-cards: #585858;
$color-text-footer: #7b7b7b;
$color-text-white: #fff;

$color-button: #a3bbc8;
$color-banner: #fcd7b6;
$color-dots-def: #fde3cc;
$color-line-cards: #e8e4df;
$color-search: #edf1f4;
$color-form-bg: #fef7f0;
$color-cards-product: #feefe2;
$color-design: #f8f8f8;
$color-view: #262626;
$color-date: #222933;
$color-footer-line: #dae4e9;
$color-placeholder: #234969;
$color-signature-border: #e0e0e0;
$color-box-shadow: rgba(37, 37, 37, 0.05);

%btn {
  padding: 20px 50px 20px 20px;
  @extend %rubik-500;
  font-size: 15px;
  color: $color-text-white;
  background-color: $color-button;
}

%lineclump {
  display: -webkit-box;
  overflow: hidden;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
}

%statistic-icons {
  background-position: left center;
  background-repeat: no-repeat;
  background-size: auto, cover;
  top: -49px;
  left: 25%;
  transform: translate(0, -50%);
}

%checkbox-hidden {
  position: absolute;
  overflow: hidden;
  clip: (rect(0 0 0 0));
  width: 1px;
  height: 1px;
}

%dmsans-400 {
  font-family: 'DMSans-Regular', sans-serif;
  font-weight: 400;
}

%dmsans-500 {
  font-family: 'DMSans-Medium', sans-serif;
  font-weight: 500;
}

%dmsans-700 {
  font-family: 'DMSans-Bold', sans-serif;
  font-weight: 700;
}

%rubik-300 {
  font-family: 'Rubik-Light', sans-serif;
  font-weight: 300;
}

%rubik-400 {
  font-family: 'Rubik-Regular', sans-serif;
  font-weight: 400;
}

%rubik-500 {
  font-family: 'Rubik-Medium', sans-serif;
  font-weight: 500;
}

%rubik-700 {
  font-family: 'Rubik-Bold', sans-serif;
  font-weight: 700;
}

%poppins-600 {
  font-family: 'Poppins-SemiBold', sans-serif;
  font-weight: 600;
}

%poppins-700 {
  font-family: 'Poppins-Bold', sans-serif;
  font-weight: 700;
}

@function max($numbers...) {
  @return m#{a}x(#{$numbers});
}

@function min($numbers...) {
  @return m#{i}n(#{$numbers});
}